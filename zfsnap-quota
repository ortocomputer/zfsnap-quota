#!/bin/bash

#
# Check for disk capacity and remove snapshots if capacity is above threshold.
#
VERSION="0.1.1"

ZFS=/sbin/zfs

LOGTAG=$(basename $0)

TESTRUN=0
VERBOSE=0
VOLUME="$(${ZFS} list -Ho name | head -1)"
CAPLIMIT=90

function print_version(){
	echo ${0##*/} v${VERSION} by Toni Magni
}

function print_help(){
            cat << EOF
${0##*/} v${VERSION} by Toni Magni

Syntax:
${0##*/} [options]

OPTIONS:
	--threshold X	= X is a percentage of disk capacity threshold (default ${CAPLIMIT}%).
	--pool VOL	= VOL is the name of the ZFS pool (default ${VOLUME}).
	--dry-run	= Don't actually do anything. Just print what would be destroyed.
	--verbose 	= Verbose output.
	--version	= Print version and exit.
	--help		= Print help and exit.
EOF
}

for arg in "$@"; do
	case "$arg" in
		--threshold=*)
			CAPLIMIT="${arg#*=}"
			;;
		--pool=*)
			VOLUME="${arg#*=}"
			if ! zpool list "${VOLUME}" > /dev/null; then
				exit 1
			fi
			;;
		--verbose)
			VERBOSE=1
			;;
		--dry-run)
			TESTRUN=1
			;;
		--help)
			print_help
			exit 0
			;;
		--version)
			print_version
			exit 0
			;;
		*)
			echo "ERROR: Argument $1 not recognized"
			print_help
			exit 1
			;;
	
	esac
done
#CURRENT_CAPACITY=$(df -P  | grep ${VOLUME} | head -1 | awk '{ print $5}' | sed 's/%//g')
function current_capacity() {
	echo $(zpool list -Ho name,cap | grep ${VOLUME} | awk '{ print $2}' | sed 's/%//g')
}
CURRENT_CAPACITY=$(current_capacity)
if [ ${VERBOSE} -ne 0 ]; then
	echo "Curent usage of ${VOLUME} is: ${CURRENT_CAPACITY}%. Threshold: ${CAPLIMIT}%"
fi
REMOVED_SNAPSHOTS=0

while [ ${CURRENT_CAPACITY} -ge ${CAPLIMIT} ]; do
    if [ $(${ZFS} list -t snapshot -o name | grep ${VOLUME} | wc -l) -lt 1 ]; then
        LOGMESSAGE="Disk space is low, but no snapshots found. Can't free up any space."
        logger -t${LOGTAG} ${LOGMESSAGE}
        echo ${LOGMESSAGE} > /dev/stderr
        exit
    fi
    OLDEST_SNAPSHOT=$(${ZFS} list -t snapshot -o name -s creation | grep ${VOLUME} | head -1)
    logger -t${LOGTAG}  "Disk capacity at ${CURRENT_CAPACITY}%. Limit is ${CAPLIMIT}%. Destroying [${OLDEST_SNAPSHOT}]"
    DESTROY="${ZFS} destroy -v ${OLDEST_SNAPSHOT}"
    if [ ${TESTRUN} -ne 0 ]; then
        echo ${DESTROY}
    else
        eval ${DESTROY}
    fi
    ((REMOVED_SNAPSHOTS++))
    sleep 10 # Allow time for FS to write and df to report correctly.
    CURRENT_CAPACITY=$(current_capacity)
    logger -t${LOGTAG}  "Disk capacity now at ${CURRENT_CAPACITY}%."
done

if [ ${REMOVED_SNAPSHOTS} -ne 0 ]; then
    logger -t${LOGTAG}  "${REMOVED_SNAPSHOTS} snapshots removed."
else
    logger -t${LOGTAG}  "Current capacity is only at ${CURRENT_CAPACITY}%. Nothing to be done."
fi
